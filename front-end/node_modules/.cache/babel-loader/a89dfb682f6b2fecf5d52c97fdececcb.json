{"ast":null,"code":"import axios from 'axios';\nexport async function PostComplient(Complient) {\n  try {\n    const response = await axios.post(\"http://localhost:2500/api/complient\", {\n      \"provider\": Complient.provider,\n      \"email\": Complient.email,\n      \"message\": Complient.message,\n      \"mobile\": Complient.mobile,\n      \"address\": Complient.address,\n      \"nic\": Complient.nic,\n      \"imobile\": Complient.imobile,\n      \"name\": Complient.name\n    });\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n}\n_c = PostComplient;\n;\nexport async function getComplientsProvider(provider) {\n  try {\n    const response = await axios.get(`http://localhost:2500/api/provider/${provider}`);\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n}\nexport async function deleteComplient(id) {\n  try {\n    const response = await axios.delete(`http://localhost:2500/api/complient/${id}`);\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n}\n;\nexport async function UpdateComplient(Complient) {\n  cons;\n  let NewState = \"\";\n\n  if (Complient.status === \"Request\") {\n    NewState = \"Process\";\n  }\n\n  if (Complient.status === \"Process\") {\n    NewState = \"Completed\";\n  }\n\n  console.log(NewState);\n\n  try {\n    const response = await axios.put(`http://localhost:2500/api/complient/${Complient._id}`, {\n      \"provider\": this,\n      \"email\": Complient.email,\n      \"message\": Complient.message,\n      \"mobile\": Complient.mobile,\n      \"address\": Complient.address,\n      \"nic\": Complient.nic,\n      \"imobile\": Complient.imobile,\n      \"name\": Complient.name,\n      \"status\": NewState\n    });\n    return response;\n  } catch (error) {\n    return error.response;\n  }\n}\n_c2 = UpdateComplient;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostComplient\");\n$RefreshReg$(_c2, \"UpdateComplient\");","map":{"version":3,"sources":["/Users/vivekjeevanarajh/Documents/AFProject/front-end/electronic_and_telecommunication/src/service/complientService.js"],"names":["axios","PostComplient","Complient","response","post","provider","email","message","mobile","address","nic","imobile","name","error","getComplientsProvider","get","deleteComplient","id","delete","UpdateComplient","cons","NewState","status","console","log","put","_id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,eAAgBC,aAAhB,CAA8BC,SAA9B,EAAwC;AAG3C,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAN,CAAW,qCAAX,EACvB;AAAC,kBAAYF,SAAS,CAACG,QAAvB;AACA,eAAQH,SAAS,CAACI,KADlB;AAEA,iBAAWJ,SAAS,CAACK,OAFrB;AAGA,gBAASL,SAAS,CAACM,MAHnB;AAIA,iBAAUN,SAAS,CAACO,OAJpB;AAKA,aAAMP,SAAS,CAACQ,GALhB;AAMA,iBAAUR,SAAS,CAACS,OANpB;AAOA,cAAOT,SAAS,CAACU;AAPjB,KADuB,CAAvB;AAWA,WAAOT,QAAP;AACH,GAbD,CAcA,OAAMU,KAAN,EAAY;AACR,WAAOA,KAAK,CAACV,QAAb;AACH;AAGJ;KAtBsBF,a;AAsBtB;AAED,OAAO,eAAgBa,qBAAhB,CAAsCT,QAAtC,EAA+C;AAGlD,MAAG;AACC,UAAMF,QAAQ,GAAG,MAAMH,KAAK,CAACe,GAAN,CAAW,sCAAqCV,QAAS,EAAzD,CAAvB;AACA,WAAOF,QAAP;AACH,GAHD,CAIA,OAAMU,KAAN,EAAY;AACR,WAAOA,KAAK,CAACV,QAAb;AACH;AAEJ;AAED,OAAO,eAAgBa,eAAhB,CAAgCC,EAAhC,EAAmC;AAGtC,MAAG;AACC,UAAMd,QAAQ,GAAG,MAAMH,KAAK,CAACkB,MAAN,CAAc,uCAAsCD,EAAG,EAAvD,CAAvB;AACA,WAAOd,QAAP;AACH,GAHD,CAIA,OAAMU,KAAN,EAAY;AACR,WAAOA,KAAK,CAACV,QAAb;AACH;AAEJ;AAAA;AAED,OAAO,eAAgBgB,eAAhB,CAAgCjB,SAAhC,EAA0C;AACjDkB,EAAAA,IAAI;AACA,MAAIC,QAAQ,GAAC,EAAb;;AAEA,MAAGnB,SAAS,CAACoB,MAAV,KAAmB,SAAtB,EAAgC;AAC5BD,IAAAA,QAAQ,GAAC,SAAT;AACH;;AACD,MAAGnB,SAAS,CAACoB,MAAV,KAAmB,SAAtB,EAAgC;AAC5BD,IAAAA,QAAQ,GAAC,WAAT;AACH;;AAELE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEI,MAAG;AACC,UAAMlB,QAAQ,GAAG,MAAMH,KAAK,CAACyB,GAAN,CAAW,uCAAsCvB,SAAS,CAACwB,GAAI,EAA/D,EACvB;AAAC,kBAAY,IAAb;AACA,eAAQxB,SAAS,CAACI,KADlB;AAEA,iBAAWJ,SAAS,CAACK,OAFrB;AAGA,gBAASL,SAAS,CAACM,MAHnB;AAIA,iBAAUN,SAAS,CAACO,OAJpB;AAKA,aAAMP,SAAS,CAACQ,GALhB;AAMA,iBAAUR,SAAS,CAACS,OANpB;AAOA,cAAOT,SAAS,CAACU,IAPjB;AAQA,gBAASS;AART,KADuB,CAAvB;AAaA,WAAOlB,QAAP;AACH,GAfD,CAgBA,OAAMU,KAAN,EAAY;AACR,WAAOA,KAAK,CAACV,QAAb;AACH;AAGJ;MAlCsBgB,e","sourcesContent":["import axios from 'axios'\n\nexport async  function PostComplient(Complient){\n\n   \n    try{\n        const response = await axios.post(\"http://localhost:2500/api/complient\",\n        {\"provider\": Complient.provider,\n        \"email\":Complient.email,\n        \"message\": Complient.message,\n        \"mobile\":Complient.mobile,\n        \"address\":Complient.address,\n        \"nic\":Complient.nic,\n        \"imobile\":Complient.imobile,\n        \"name\":Complient.name\n\n    });\n        return response;\n    }\n    catch(error){\n        return error.response\n    }\n\n    \n};\n\nexport async  function getComplientsProvider(provider){\n\n   \n    try{\n        const response = await axios.get(`http://localhost:2500/api/provider/${provider}`);\n        return response;\n    }\n    catch(error){\n        return error.response\n    }\n    \n}\n\nexport async  function deleteComplient(id){\n\n   \n    try{\n        const response = await axios.delete(`http://localhost:2500/api/complient/${id}`);\n        return response;\n    }\n    catch(error){\n        return error.response\n    }\n    \n};\n\nexport async  function UpdateComplient(Complient){\ncons\n    let NewState=\"\";\n\n    if(Complient.status===\"Request\"){\n        NewState=\"Process\"\n    }\n    if(Complient.status===\"Process\"){\n        NewState=\"Completed\"\n    }\n\nconsole.log(NewState)\n   \n    try{\n        const response = await axios.put(`http://localhost:2500/api/complient/${Complient._id}`,\n        {\"provider\": this,\n        \"email\":Complient.email,\n        \"message\": Complient.message,\n        \"mobile\":Complient.mobile,\n        \"address\":Complient.address,\n        \"nic\":Complient.nic,\n        \"imobile\":Complient.imobile,\n        \"name\":Complient.name,\n        \"status\":NewState\n\n\n    });\n        return response;\n    }\n    catch(error){\n        return error.response\n    }\n    \n    \n}\n"]},"metadata":{},"sourceType":"module"}